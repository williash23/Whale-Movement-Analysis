model;
{
#  "DCRW" model from Ian D Jonsen, Joanna Mills Flemming and Ransom A Myers
#    Robust state-space modeling of animal movement data
#    jonsen@mathstat.dal.ca
#    Created by Ian Jonsen, 10/29/2004, last modified, 06/23/2005

pi <- 3.141592653589
pi2 <- 2*pi
npi <- pi*-1

Omega[1,1] <- 1
Omega[1,2] <- 0
Omega[2,1] <- 0
Omega[2,2] <- 1

## priors on process uncertainty
iSigma[1:2,1:2] ~ dwish(Omega[,],2)	
Sigma[1:2,1:2] <- inverse(iSigma[,])

## Priors for first location
for(k in 1:2){
	x[1,k] ~ dt(y[1,k], itau2[1,k], nu[1,k])
	}

## Assume simple random walk to estimate 2nd regular position
x[2,1:2] ~ dmnorm(x[1,], iSigma[,])

theta ~ dunif(npi,pi)	## prior for theta (mean turn angle)
gamma ~ dbeta(1,1)	## prior for gamma (persistence)
psi ~ dunif(0, 10)	## scaling factor for estimation error

## Transition equation
for(t in 2:(RegN-1)){
	## Build transition matrix for rotational component	
	T[t,1,1] <- cos(theta)
	T[t,1,2] <- -sin(theta)
	T[t,2,1] <- sin(theta)
	T[t,2,2] <- cos(theta)
	for(k in 1:2){
		Tdx[t,k] <- T[t,k,1] * (x[t,1] - x[t-1,1]) + T[t,k,2] * (x[t,2] - x[t-1,2])	## matrix multiplication
		x.mn[t,k] <- x[t,k] + gamma * Tdx[t,k]	## predict next location (no process error)
		}
			
	x[t+1,1:2] ~ dmnorm(x.mn[t,], iSigma[,])	## predict next location (with process error)
	}

##	Measurement equation
for(t in 2:RegN){				## loops over regular time intervals (t)
	for(i in idx[t-1]:(idx[t]-1)){		## loops over observed locations within interval t
		for(k in 1:2){
			itau2.psi[i,k] <- itau2[i,k] * psi
			zhat[i,k] <- (1 - j[i]) * x[t-1,k] + j[i]*x[t,k]	## interpolate irregularly observed locations
			y[i,k] ~ dt(zhat[i,k], itau2.psi[i,k], nu[i,k])	## robust measurement equation
			}
		}
	}	
}

# When running in WinBUGS gui mode:

#Paste Data here (eg. hsdata.txt)



#Paste Inits here (eg. hsDCRWinits.txt)


require(chron)
require(rbugs)
# dat4bugs(hseal.dat, 1) ... 1 = timestep of 1 day, this line must be changed to:
#		dat4bugs(gs617.dat, 2) to run for grey seal 617 with timestep=2 days, and similarly for grey seal 2986.
hseal.wb.dat <- dat4bugs(hseal.dat, 1)
y <- hseal.wb.dat$y
idx <- hseal.wb.dat$idx
x <- matrix(unlist(lapply(1:(length(idx)-1), function(i){y[idx[i],]})), length(idx)-1, 2, byrow = T)

inits <- list(list(iSigma = matrix(c(1, 0, 0, 1), 2, 2), gamma = 0.5, theta = 0, psi = 1, x = x), list(iSigma = matrix(c(1, 0, 0, 1), 2, 2), gamma = 0.5, theta = 0, psi = 1, x = x))

parameters <- c('Sigma', 'x', 'zhat', 'theta', 'gamma', 'psi')

DCRW.bug <- file.path('~/data/SSM/ecology04Rev/DCRW.txt')
hsealDCRW.out <- rbugs(data = hseal.wb.dat, inits, parameters,
	DCRW.bug, n.chains=2, n.iter=40000, n.burnin=20000, n.thin = 5, workingDir="~/.wine/winC/temp", bugsWorkingDir="c:/temp", bugs="c:/Program Files/WinBUGS14/WinBUGS14.exe", wine="/usr/local/bin/wine", useWine=TRUE, debug=F)
#clean up
rm(hseal.wb.dat, inits,parameters, y, idx, x)
hsealDCRW.out<-rbind(hsealDCRW.out[[1]],hsealDCRW.out[[2]])
return(hsealDCRW.out)